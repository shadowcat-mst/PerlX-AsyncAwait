# Generated by PerlX::AsyncAwait::Compiler 0 (Module::Compile 0.35) - do not edit!
################((( 32-bit Checksum Validator III )))################
#line 1
BEGIN { use 5.006; local (*F, $/); ($F = __FILE__) =~ s!c$!!; open(F)
or die "Cannot open $F: $!"; binmode(F, ':crlf'); if (unpack('%32N*',
$F=readline(*F)) != 0x2FCBA19C) { use Filter::Util::Call; my $f = $F;
filter_add(sub { filter_del(); 1 while &filter_read; $_ = $f; 1; })}}
#line 1
package AA;

use strictures 2;
use IO::Async::Loop;
use Net::Async::HTTP;
use HTTP::Request::Common;
use Object::Tap;
use PerlX::AsyncAwait::Runtime;

my $http = Net::Async::HTTP->new;

my $loop = IO::Async::Loop->new->$_tap(add => $http);

my $go = async { __gen_resume; 
  warn "Starting";
  my $res = do { __gen_suspend '__GEN_A001', $http->do_request(request => GET("http://trout.me.uk")); __GEN_A001: __gen_sent };
  return $res->content;
};

my $f = $go->();

warn "Request started";

$loop->await($f);

print join("\n", (split("\n", $f->get))[0..9], '');
