# Generated by PerlX::Generator::Compiler 0 (Module::Compile 0.35) - do not edit!
################((( 32-bit Checksum Validator III )))################
#line 1
BEGIN { use 5.006; local (*F, $/); ($F = __FILE__) =~ s!c$!!; open(F)
or die "Cannot open $F: $!"; binmode(F, ':crlf'); if (unpack('%32N*',
$F=readline(*F)) != 0x757CC21E) { use Filter::Util::Call; my $f = $F;
filter_add(sub { filter_del(); 1 while &filter_read; $_ = $f; 1; })}}
#line 1
package Foo;

use strictures 2;
use PerlX::Generator::Runtime;

my $gen = generator { __gen_resume; 
  my ($max) = @_;
  warn "Generator started";
  do { __gen_suspend '__GEN_A001', $max; __GEN_A001: __gen_sent };
  warn "Entering loop";
  my @__gen_A003 = (reverse 0..$max-1); for (my $__gen_A004 = 0; $__gen_A004 < @__gen_A003; $__gen_A004++) { my $x = $__gen_A003[$__gen_A004];
    my $sent = do { __gen_suspend '__GEN_A002', $x; __GEN_A002: __gen_sent };
    warn "Received $sent" if $sent;
  }
  warn "Generator exiting";
};

my $inv = $gen->start(5);

warn $inv->next;
warn $inv->next;
warn $inv->next('foo');
warn $inv->next;
warn $inv->next;
$inv->error('ARGH');
# 4df3a432df42db52fbc55220580e90177355cf66
